{"id":"helpers/errors.js","dependencies":[{"name":"/home/josephabouharb/Projects/coding-interview-response-joseph-abouharb/coding-interview-response-joseph-abouharb/package.json","includedInParent":true,"mtime":1579690692000}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nconst Error = {\n  IncorrectShape: {\n    error: 'Incorrect shape type! Enter \"r\", \"c\", \"t\" or \"p\" to draw shapes.'\n  },\n  Malformed: shape => ({\n    error: `${shape.type} types only for ${shape.name}`\n  }),\n  InsufficientParamaters: shape => ({\n    error: `${shape.constraint} atrributes needed for ${shape.name}`\n  }),\n  NoInputEntered: {\n    error: 'No Input Entered'\n  },\n  InvalidProps: shape => ({\n    error: `no props inputted for ${shape.name}`\n  })\n};\nvar _default = Error;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"helpers/errors.js","original":{"line":1,"column":0}},{"name":"Error","generated":{"line":7,"column":6},"source":"helpers/errors.js","original":{"line":1,"column":6}},{"generated":{"line":7,"column":11},"source":"helpers/errors.js","original":{"line":1,"column":11}},{"generated":{"line":7,"column":14},"source":"helpers/errors.js","original":{"line":1,"column":14}},{"name":"IncorrectShape","generated":{"line":8,"column":0},"source":"helpers/errors.js","original":{"line":2,"column":2}},{"name":"IncorrectShape","generated":{"line":8,"column":2},"source":"helpers/errors.js","original":{"line":2,"column":2}},{"generated":{"line":8,"column":16},"source":"helpers/errors.js","original":{"line":2,"column":16}},{"generated":{"line":8,"column":18},"source":"helpers/errors.js","original":{"line":2,"column":18}},{"name":"error","generated":{"line":9,"column":0},"source":"helpers/errors.js","original":{"line":3,"column":4}},{"name":"error","generated":{"line":9,"column":4},"source":"helpers/errors.js","original":{"line":3,"column":4}},{"generated":{"line":9,"column":9},"source":"helpers/errors.js","original":{"line":3,"column":9}},{"generated":{"line":9,"column":11},"source":"helpers/errors.js","original":{"line":3,"column":11}},{"generated":{"line":10,"column":0},"source":"helpers/errors.js","original":{"line":2,"column":18}},{"generated":{"line":10,"column":3},"source":"helpers/errors.js","original":{"line":1,"column":14}},{"name":"Malformed","generated":{"line":11,"column":0},"source":"helpers/errors.js","original":{"line":5,"column":2}},{"name":"Malformed","generated":{"line":11,"column":2},"source":"helpers/errors.js","original":{"line":5,"column":2}},{"generated":{"line":11,"column":11},"source":"helpers/errors.js","original":{"line":5,"column":11}},{"name":"shape","generated":{"line":11,"column":13},"source":"helpers/errors.js","original":{"line":5,"column":14}},{"generated":{"line":11,"column":18},"source":"helpers/errors.js","original":{"line":5,"column":13}},{"generated":{"line":11,"column":23},"source":"helpers/errors.js","original":{"line":6,"column":4}},{"name":"error","generated":{"line":12,"column":0},"source":"helpers/errors.js","original":{"line":6,"column":6}},{"name":"error","generated":{"line":12,"column":4},"source":"helpers/errors.js","original":{"line":6,"column":6}},{"generated":{"line":12,"column":9},"source":"helpers/errors.js","original":{"line":6,"column":11}},{"generated":{"line":12,"column":11},"source":"helpers/errors.js","original":{"line":6,"column":14}},{"name":"shape","generated":{"line":12,"column":14},"source":"helpers/errors.js","original":{"line":6,"column":16}},{"generated":{"line":12,"column":19},"source":"helpers/errors.js","original":{"line":6,"column":21}},{"name":"type","generated":{"line":12,"column":20},"source":"helpers/errors.js","original":{"line":6,"column":22}},{"generated":{"line":12,"column":24},"source":"helpers/errors.js","original":{"line":6,"column":27}},{"name":"shape","generated":{"line":12,"column":43},"source":"helpers/errors.js","original":{"line":6,"column":45}},{"generated":{"line":12,"column":48},"source":"helpers/errors.js","original":{"line":6,"column":50}},{"name":"name","generated":{"line":12,"column":49},"source":"helpers/errors.js","original":{"line":6,"column":51}},{"generated":{"line":12,"column":53},"source":"helpers/errors.js","original":{"line":6,"column":56}},{"generated":{"line":13,"column":0},"source":"helpers/errors.js","original":{"line":6,"column":4}},{"generated":{"line":13,"column":3},"source":"helpers/errors.js","original":{"line":5,"column":13}},{"generated":{"line":13,"column":4},"source":"helpers/errors.js","original":{"line":1,"column":14}},{"name":"InsufficientParamaters","generated":{"line":14,"column":0},"source":"helpers/errors.js","original":{"line":8,"column":2}},{"name":"InsufficientParamaters","generated":{"line":14,"column":2},"source":"helpers/errors.js","original":{"line":8,"column":2}},{"generated":{"line":14,"column":24},"source":"helpers/errors.js","original":{"line":8,"column":24}},{"name":"shape","generated":{"line":14,"column":26},"source":"helpers/errors.js","original":{"line":8,"column":27}},{"generated":{"line":14,"column":31},"source":"helpers/errors.js","original":{"line":8,"column":26}},{"generated":{"line":14,"column":36},"source":"helpers/errors.js","original":{"line":8,"column":38}},{"name":"error","generated":{"line":15,"column":0},"source":"helpers/errors.js","original":{"line":9,"column":4}},{"name":"error","generated":{"line":15,"column":4},"source":"helpers/errors.js","original":{"line":9,"column":4}},{"generated":{"line":15,"column":9},"source":"helpers/errors.js","original":{"line":9,"column":9}},{"generated":{"line":15,"column":11},"source":"helpers/errors.js","original":{"line":9,"column":12}},{"name":"shape","generated":{"line":15,"column":14},"source":"helpers/errors.js","original":{"line":9,"column":14}},{"generated":{"line":15,"column":19},"source":"helpers/errors.js","original":{"line":9,"column":19}},{"name":"constraint","generated":{"line":15,"column":20},"source":"helpers/errors.js","original":{"line":9,"column":20}},{"generated":{"line":15,"column":30},"source":"helpers/errors.js","original":{"line":9,"column":31}},{"name":"shape","generated":{"line":15,"column":56},"source":"helpers/errors.js","original":{"line":9,"column":56}},{"generated":{"line":15,"column":61},"source":"helpers/errors.js","original":{"line":9,"column":61}},{"name":"name","generated":{"line":15,"column":62},"source":"helpers/errors.js","original":{"line":9,"column":62}},{"generated":{"line":15,"column":66},"source":"helpers/errors.js","original":{"line":9,"column":67}},{"generated":{"line":16,"column":0},"source":"helpers/errors.js","original":{"line":8,"column":38}},{"generated":{"line":16,"column":3},"source":"helpers/errors.js","original":{"line":8,"column":26}},{"generated":{"line":16,"column":4},"source":"helpers/errors.js","original":{"line":1,"column":14}},{"name":"NoInputEntered","generated":{"line":17,"column":0},"source":"helpers/errors.js","original":{"line":11,"column":2}},{"name":"NoInputEntered","generated":{"line":17,"column":2},"source":"helpers/errors.js","original":{"line":11,"column":2}},{"generated":{"line":17,"column":16},"source":"helpers/errors.js","original":{"line":11,"column":16}},{"generated":{"line":17,"column":18},"source":"helpers/errors.js","original":{"line":11,"column":18}},{"name":"error","generated":{"line":18,"column":0},"source":"helpers/errors.js","original":{"line":12,"column":4}},{"name":"error","generated":{"line":18,"column":4},"source":"helpers/errors.js","original":{"line":12,"column":4}},{"generated":{"line":18,"column":9},"source":"helpers/errors.js","original":{"line":12,"column":9}},{"generated":{"line":18,"column":11},"source":"helpers/errors.js","original":{"line":12,"column":11}},{"generated":{"line":19,"column":0},"source":"helpers/errors.js","original":{"line":11,"column":18}},{"generated":{"line":19,"column":3},"source":"helpers/errors.js","original":{"line":1,"column":14}},{"name":"InvalidProps","generated":{"line":20,"column":0},"source":"helpers/errors.js","original":{"line":14,"column":2}},{"name":"InvalidProps","generated":{"line":20,"column":2},"source":"helpers/errors.js","original":{"line":14,"column":2}},{"generated":{"line":20,"column":14},"source":"helpers/errors.js","original":{"line":14,"column":14}},{"name":"shape","generated":{"line":20,"column":16},"source":"helpers/errors.js","original":{"line":14,"column":17}},{"generated":{"line":20,"column":21},"source":"helpers/errors.js","original":{"line":14,"column":16}},{"generated":{"line":20,"column":26},"source":"helpers/errors.js","original":{"line":14,"column":28}},{"name":"error","generated":{"line":21,"column":0},"source":"helpers/errors.js","original":{"line":15,"column":4}},{"name":"error","generated":{"line":21,"column":4},"source":"helpers/errors.js","original":{"line":15,"column":4}},{"generated":{"line":21,"column":9},"source":"helpers/errors.js","original":{"line":15,"column":9}},{"generated":{"line":21,"column":11},"source":"helpers/errors.js","original":{"line":15,"column":12}},{"name":"shape","generated":{"line":21,"column":36},"source":"helpers/errors.js","original":{"line":15,"column":36}},{"generated":{"line":21,"column":41},"source":"helpers/errors.js","original":{"line":15,"column":41}},{"name":"name","generated":{"line":21,"column":42},"source":"helpers/errors.js","original":{"line":15,"column":42}},{"generated":{"line":21,"column":46},"source":"helpers/errors.js","original":{"line":15,"column":47}},{"generated":{"line":22,"column":0},"source":"helpers/errors.js","original":{"line":14,"column":28}},{"generated":{"line":22,"column":3},"source":"helpers/errors.js","original":{"line":14,"column":16}},{"generated":{"line":23,"column":0},"source":"helpers/errors.js","original":{"line":1,"column":14}},{"generated":{"line":23,"column":1},"source":"helpers/errors.js","original":{"line":1,"column":0}},{"name":"Error","generated":{"line":24,"column":15},"source":"helpers/errors.js","original":{"line":19,"column":15}}],"sources":{"helpers/errors.js":"const Error = {\n  IncorrectShape: {\n    error: 'Incorrect shape type! Enter \"r\", \"c\", \"t\" or \"p\" to draw shapes.'\n  },\n  Malformed: (shape) => (\n    { error: `${shape.type} types only for ${shape.name}`\n  }),\n  InsufficientParamaters: (shape) => ({\n    error: `${shape.constraint} atrributes needed for ${shape.name}`\n  }),\n  NoInputEntered: {\n    error: 'No Input Entered'\n  },\n  InvalidProps: (shape) => ({\n    error: `no props inputted for ${shape.name}`\n  }),\n};\n\nexport default Error;"},"lineCount":null}},"error":null,"hash":"e44b86b5be5d625285f0a0a1aff650fe","cacheData":{"env":{}}}